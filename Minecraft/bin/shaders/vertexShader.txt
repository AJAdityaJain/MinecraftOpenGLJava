#version 400 core

in vec3 position;
in vec2 textureCoords;

out vec2 pass_Tcoords;
out float visibility;

uniform mat4 transMatrix;
uniform mat4 projMatrix;
uniform mat4 viewMatrix;

const float density = 0.007;
const float gradient = 1.5;

void main(void){
	vec4 worldPosition = transMatrix * vec4(position, 1.0);
	vec4 posRelativeToCam = viewMatrix * worldPosition;
	gl_Position = projMatrix * posRelativeToCam;
	pass_Tcoords = textureCoords;
	
	float distance = length(posRelativeToCam.xyz);
	visibility = exp(-pow((distance*density), gradient));
	visibility = clamp(visibility, 0.0, 1.0);
}